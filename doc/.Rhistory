length(c(-1,0,NA,5))
length(c(-1,0,NULL,5))
print(length(c(-1,0,NULL,5)))
print(length(c(-1,0,NA,5)),length(c(-1,0,NULL,5)))
print(length(c(-1,0,NA,5)))
print(length(c(-1,0,NULL,5)))
x<-c()
type(x)
x[2] <- 3
x
type(x
type(x)
#x[2] <- 3
x
#x[2] <- 3
x
x[1] <- 5
x <- c()
x[1] <- 5
#x[2] <- 3
x
x <- c()
x[1] <- 5
x[2] <- 3
x
type(x)
class(x)
x
myList <- list(a = 1, b = 2)
myList
myList$a
myList
myList <- list(a = 1, b = 2)
myList$a = NULL
myList
data <- repeat(c("Treatment","Control"),c(3,4))
data <- rep(c("Treatment","Control"),c(3,4))
data = factor(data)
data
attriutes(data)
attributes(data)
table(data)
age <- c(20, 30, 40, 35, 35, 35, 35)
sex <- c(rep("M",4"),rep("F",3))
table(group)
data <- rep(c("Treatment","Control"),c(3,4))
group <- factor(data)
table(group)
split(age)
split(age,sep = "----")
split(age,group)
table(sex,group)
age <- c(20, 30, 40, 35, 35, 35, 35)
sex <- c("M","M","F","F","M","F","M")
split(age,group)
table(sex,group)
student_data
Name <- c("John","Jill","Jacob","Jenny")
Year <- c(1,1,2,4)
Grade <- c("B","A+","B-","A")
student_data <- data.frame(Name,Year,Grade,stringsAsFactors = FALSE)
student_data
dim(student_data)
summary(student_data)
states <- data.frame(state.x77,Region = state.region,Abbr = state.abb)
summary(stte)
summary(states)
?state.x77
library(datasets)
states <- data.frame(state.x77,Region = state.region,Abbr = state.abb)
?state.x77
student_data[3:4,]
Name <- c("John","Jill","Jacob","Jenny")
Year <- c(1,1,2,4)
Grade <- c("B","A+","B-","A")
student_data <- data.frame(Name,Year,Grade,stringsAsFactors = FALSE)
new_student("Bobby",1,"A")
new_student <- c("Bobby",1,"A")
Name <- c("John","Jill","Jacob","Jenny")
Year <- c(1,1,2,4)
Grade <- c("B","A+","B-","A")
student_data <- data.frame(Name,Year,Grade,stringsAsFactors = FALSE)
new_student <- c("Bobby",1,"A")
rbind(student_data,new_student)
student_data$School <- "Columbia"
student_data
#read.table("Student_data.txt",header = FALSE, as.is = TRUE)
?read.table
(1 > 3) | (4 * 5 == 20)
c(0, 1, 4) < 3
which (c(0, 1, 4) < 3)
c(0, 1, 4) >= c(1, 1, 3)
w>3
w <- c(-3, 20, 9, 2)
w > 3
w [w > 3]
M
M <- matrix(c(rep(4,5),5:8),nrow = 3, ncol = 3)
M
M > 5
M[M[ ,3] < 8, ]
knitr::opts_chunk$set(echo = TRUE)
?ToothGrowth
ToothGrowth
data <- data(ToothGrowth)
data
data <- ToothGrowth
data
data[supp = VC]
data$supp = VC
data <- ToothGrowth
data$supp = VC
View(data)
View(data)
data$supp == VC
data$supp == data$VC
data$supp == "VC"
data <- ToothGrowth
VC <- data[data$supp == "VC"]
data <- ToothGrowth
VC <- data[data$supp == "VC"]
data <- ToothGrowth
Supp1 <- data[data$supp == "VC"]
data[data$supp == "VC"]
data <- ToothGrowth
data[data$supp == "VC"]
data <- ToothGrowth
data[ ,data$supp == "VC"]
data <- ToothGrowth
data[data$supp == "VC", ]
#OJ <- data[data$supp == "OJ"]
data <- ToothGrowth[ ,1:2]
data[data$supp == "VC", ]
#OJ <- data[data$supp == "OJ"]
data
data <- ToothGrowth[ ,1:2]
VC <- data[data$supp == "VC", ]
OJ <- data[data$supp == "OJ". ]
data <- ToothGrowth[ ,1:2]
VC <- data[data$supp == "VC", ]
OJ <- data[data$supp == "OJ", ]
View(VC)
View(VC)
?kurtosis
kurtosis(VC$len)
kurtosis(VC$len)
# For VC
```{r}
install.packages("library(e1071)")
install.packages("e1071")
library(e1071)
kurtosis(VC$len)
kurtosis(OJ$len)
data <- ToothGrowth[ ,1:2]
VC <- data[data$supp == "VC", ]
OJ <- data[data$supp == "OJ", ]
library(e1071)
kurtosis(VC$len)
kurtosis(OJ$len)
median(OJ$len)
IQR(OJ$len)
library(e1071)
kurtosis(VC$len)
median(VC$len)
IQR(VC$len)
data <- ToothGrowth[ ,1:2]
VC <- data[data$supp == "VC", ]
OJ <- data[data$supp == "OJ", ]
library(e1071)
install.packages("bootstrap")
library(e1071)
library(bootstrap)
theta_kurtosis <- function(x){
kurtosis(x)
}
theta_median <- function(x){
median(x)
}
theta_IQR <- function(x){
IQR(x)
}
jackknife(x = VC$len, theta = theta_kurtosis(VC$len) )
theta_kurtosis <- function(x){
kurtosis(x)
}
theta_median <- function(x){
median(x)
}
theta_IQR <- function(x){
IQR(x)
}
jackknife(x = VC$len, theta = theta_kurtosis(VC$len) )
jackknife(x = VC$len, theta = theta_kurtosis)
jackknife_kurtosis_VC <- jackknife(x = VC$len, theta = theta_kurtosis)
jackknife_kurtosis_VC$jack.se
jackknife_kurtosis_VC$jack.bias
jackknife_median_VC <- jackknife(x = VC$len, theta = theta_median)
jackknife_median_VC$jack.se
jackknife_median_VC$jack.bias
jackknife_IQR_VC <- jackknife(x = VC$len, theta = theta_IQR)
jackknife_IQR_VC$jack.se
jackknife_IQR_VC$jack.bias
jackknife_kurtosis_OJ <- jackknife(x = OJ$len, theta = theta_kurtosis)
jackknife_kurtosis_OJ$jack.se
jackknife_kurtosis_OJ$jack.bias
jackknife_median_OJ <- jackknife(x = OJ$len, theta = theta_median)
jackknife_median_OJ$jack.se
jackknife_median_OJ$jack.bias
jackknife_IQR_OJ <- jackknife(x = OJ$len, theta = theta_IQR)
jackknife_IQR_OJ$jack.se
jackknife_IQR_OJ$jack.bias
sample <- c()
n <- 100
for (i in 1:1000){
sample[i] <- sample(x = VC$len,size = n,replace = TRUE)
}
sample
for (i in 1:10){
sample[i] <- sample(x = VC$len,size = n,replace = TRUE)
}
sample <- c()
n <- 100
for (i in 1:10){
a <- sample(x = VC$len,size = n,replace = TRUE)
sample[i] <- kurtosis(VC$len) - kurtosis(a)
}
sample
sample <- c()
n <- 100
for (i in 1:10){
a <- sample(x = VC$len,size = n,replace = TRUE)
sample[i] <- kurtosis(VC$len) - kurtosis(a)
}
bias_kurtosis <- mean(sample)
variance_kurtosis <- var(sample)
sample <- c()
n <- 100
for (i in 1:10){
a <- sample(x = VC$len,size = n,replace = TRUE)
sample[i] <- kurtosis(VC$len) - kurtosis(a)
}
bias_kurtosis <- mean(sample)
variance_kurtosis <- var(sample)
bias_kurtosis
variance_kurtosis
bootstrap_method <- function(data){
sample <- c()
n <- 100
for (i in 1:n){
a <- sample(x = data,size = n,replace = TRUE)
sample[i] <- kurtosis(data) - kurtosis(a)
}
bias_kurtosis <- mean(sample)
variance_kurtosis <- var(sample)
return(bias_kurtosis, variance_kurtosis)
}
bootstrap_method(VC$len)
bootstrap_method <- function(data){
sample <- c()
n <- 100
for (i in 1:n){
a <- sample(x = data,size = n,replace = TRUE)
sample[i] <- kurtosis(data) - kurtosis(a)
}
bias_kurtosis <- mean(sample)
variance_kurtosis <- var(sample)
return([bias_kurtosis, variance_kurtosis])
bootstrap_method <- function(data){
sample <- c()
n <- 100
for (i in 1:n){
a <- sample(x = data,size = n,replace = TRUE)
sample[i] <- kurtosis(data) - kurtosis(a)
}
bias_kurtosis <- mean(sample)
variance_kurtosis <- var(sample)
return(list(bias_kurtosis, variance_kurtosis))
}
bootstrap_method(VC$len)
bootstrap_method <- function(data){
sample <- c()
n <- 100
for (i in 1:n){
a <- sample(x = data,size = n,replace = TRUE)
sample[i] <- kurtosis(data) - kurtosis(a)
}
bias_kurtosis <- mean(sample)
variance_kurtosis <- var(sample)
return(list(bias_kurtosis = bias_kurtosis, variance_kurtosis = variance_kurtosis))
}
bootstrap_method(VC$len)
bootstrap_method(OJ$len)
bootstrap_method <- function(data,function_name){
sample <- c()
n <- 100
for (i in 1:n){
a <- sample(x = data,size = n,replace = TRUE)
sample[i] <- function_name(data) - function_name(a)
}
bias <- mean(sample)
variance <- var(sample)
return(list(bias = bias, variance = variance))
}
bootstrap_method(VC$len,kurtosis)
bootstrap_method(VC$len,median)
bootstrap_method(VC$len,IQR)
bootstrap_method(OJ$len,kurtosis)
bootstrap_method(OJ$len,median)
bootstrap_method(OJ$len,IQR)
bootstrap_method <- function(data,function_name){
sample <- c()
n <- 100
for (i in 1:n){
a <- sample(x = data,size = len(data),replace = TRUE)
sample[i] <- function_name(data) - function_name(a)
}
bias <- mean(sample)
variance <- var(sample)
return(list(bias = bias, variance = variance))
}
bootstrap_method(VC$len,kurtosis)
bootstrap_method <- function(data,function_name){
sample <- c()
n <- 100
for (i in 1:n){
a <- sample(x = data,size = length(data),replace = TRUE)
sample[i] <- function_name(data) - function_name(a)
}
bias <- mean(sample)
variance <- var(sample)
return(list(bias = bias, variance = variance))
}
bootstrap_method(VC$len,kurtosis)
bootstrap_method(VC$len,median)
bootstrap_method(VC$len,IQR)
bootstrap_method(OJ$len,kurtosis)
bootstrap_method(OJ$len,median)
bootstrap_method(OJ$len,IQR)
bootstrap_method <- function(data,function_name, n = 100){
sample <- c()
for (i in 1:n){
a <- sample(x = data,size = length(data),replace = TRUE)
sample[i] <- function_name(data) - function_name(a)
}
bias <- mean(sample)
variance <- var(sample)
return(list(bias = bias, variance = variance))
}
bootstrap_method(VC$len,kurtosis)
bootstrap_method(VC$len,median)
bootstrap_method(VC$len,IQR)
bootstrap_method(OJ$len,kurtosis)
bootstrap_method(OJ$len,median)
bootstrap_method(OJ$len,IQR)
lm(len~VC,data = VC)
lm(len~supp,data = VC)
plot(x = VC$supp, y = VC$len)
View(OJ)
View(OJ)
View(VC)
View(VC)
plot(x = data$supp, y = data$len)
summary(VC)
summary(OJ)
hist(data)
hist(VC)
dotplot(VC)
is.na(data)
sum(is.na(data))
sum(complete.cases(data))
summary(data)
summary(data)
summary(VC)
summary(OJ)
lm(len~supp, data = VC)
lm(VC$len~VC$supp)
plot(x = VC$len, VC$supp)
boxplot(x = VC$len, VC$supp)
plot(VC$len~VC$supp)
